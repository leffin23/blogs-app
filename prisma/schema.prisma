// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
// datasource db {
//   provider = "postgresql"
//   url      = env("OLD_DATABASE_URL")
// }
model User {
  id String @id @default(cuid())
  clerkUserId String @unique
  email String @unique
  name String?
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
  blogs Blog []
  likes Like[] 
  comments Comment[]
}

model Blog{
  id String @id @default(cuid())
  title String
  content String
  image String? 
  userId String
  user User @relation(fields: [userId], references: [clerkUserId])
  categoryId String
  category Category @relation(fields: [categoryId], references: [id])
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
  likes Like[]
  comments Comment[]
}
model Like {
  id String @id @default(cuid())
  userId String 
  user User @relation(fields: [userId], references: [clerkUserId])
  blogId String 
  blog Blog @relation(fields: [blogId], references: [id])
  createdAt DateTime @default(now())
}
model Comment {
  id String @id @default(cuid())
  content String 
  userId String
  user User @relation(fields: [userId], references: [clerkUserId])
  blogId String 
  blog Blog @relation(fields: [blogId], references: [id])
  createdAt DateTime @default(now()) 
}

model Category{
  id String @id @default(cuid())
  name String @unique
  blogs Blog []

}
